{"version":3,"sources":["components/Navbar.tsx","App.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","utils/searchHelper.ts","components/SearchLink.tsx","types/Gender.ts","types/SearchParameters.ts","types/Sex.ts","utils/isToggleCentury.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonalLink.tsx","components/User.tsx","constants/NamesColumnsTable.tsx","components/PeopleTable.tsx","api.ts","utils/findRelative.ts","components/PeoplePage.tsx","utils/getPreparedPersons.ts","Root.tsx","index.tsx"],"names":["getClassLink","isActive","cn","Navbar","className","role","to","App","HomePage","NotFoundPage","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","Gender","SearchParameters","Sex","isToggleCentury","centuries","century","includes","filter","currentCentury","PeopleFilters","setSearchParams","query","get","Query","sex","getAll","Centuries","map","option","All","sexValue","classNames","type","placeholder","onChange","event","target","Loader","PersonalLink","person","searchParam","pathname","slug","FEMALE","name","User","selectedUser","born","died","motherName","fatherName","mother","father","NamesColumnsTable","PeopleTable","people","useParams","href","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","findRelative","gender","user","users","targetName","Male","find","PeoplePage","useState","setPeople","isErrorToGetPeople","setIsErrorToGetPeople","isLoading","setIsLoading","sort","Sort","order","Order","console","log","isNotPeopleOnServer","length","isErrorMessageVisible","useEffect","getPeople","allPersons","PeopleWithRelatives","onePerson","MALE","getPreparedPersons","catch","finally","filteredPeople","allPeople","queryFilter","filterBySex","filterByCenturies","copyAllPeople","man","toLowerCase","personCenturyBorn","Math","ceil","filterPeople","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6ffab4d2.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst getClassLink = ({ isActive }: { isActive: boolean }) => (\n  cn('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  }));\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getClassLink}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getClassLink}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport React from 'react';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","export enum Gender {\n  MALE = 'm',\n  FEMALE = 'f',\n}\n","export enum SearchParameters {\n  Sex = 'sex',\n  Query = 'query',\n  Centuries = 'centuries',\n  Sort = 'sort',\n  Order = 'order',\n}\n","export enum Sex {\n  All = 'all',\n  Female = 'f',\n  Male = 'm',\n}\n","export const isToggleCentury = (centuries: string[], century: string) => {\n  if (centuries.includes(century)) {\n    return centuries.filter(currentCentury => currentCentury !== century);\n  }\n\n  return [...centuries, century];\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport React from 'react';\nimport { SearchLink } from './SearchLink';\nimport { SearchParameters, Sex } from '../types';\nimport { isToggleCentury } from '../utils/isToggleCentury';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get(SearchParameters.Query) || '';\n  const sex = searchParams.get(SearchParameters.Sex) || 'all';\n  const centuries = searchParams.getAll(SearchParameters.Centuries) || [];\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n\n    if (event.target.value) {\n      params.set(SearchParameters.Query, event.target.value);\n    } else {\n      params.delete(SearchParameters.Query);\n    }\n\n    setSearchParams(params);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {Object.entries(Sex).map(([option, value]) => {\n          const isActive = value === Sex.All\n            ? (!sex || sex === value) : sex === value;\n          const sexValue = value === Sex.All ? null : value;\n\n          return (\n            <SearchLink\n              key={value}\n              className={classNames({\n                'is-active': isActive,\n              })}\n              params={{ sex: sexValue }}\n            >\n              {option}\n            </SearchLink>\n          );\n        })}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {['16', '17', '18', '19', '20'].map(century => {\n              return (\n                <SearchLink\n                  data-cy=\"century\"\n                  className={classNames('button', 'mr-1', {\n                    'is-info': centuries.includes(century),\n                  })}\n                  key={century}\n                  params={{ centuries: isToggleCentury(centuries, century) }}\n                >\n                  {century}\n                </SearchLink>\n              );\n            })}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            sex: null,\n            query: null,\n            centuries: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Gender, Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonalLink: React.FC<Props> = ({ person }) => {\n  const [searchParam] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        pathname: `../${person.slug}`,\n        search: searchParam.toString(),\n      }}\n      // to={`../${person.slug}`}\n      className={cn({ 'has-text-danger': person.sex === Gender.FEMALE })}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport React from 'react';\nimport { Person } from '../types';\nimport { PersonalLink } from './PersonalLink';\n\ntype Props = {\n  person: Person,\n  selectedUser: string,\n};\n\nconst WITHOUT_RELATIVE = '-';\n\nexport const User: React.FC<Props> = ({ person, selectedUser }) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      key={slug}\n      className={cn({ 'has-background-warning': slug === selectedUser })}\n      data-cy=\"person\"\n    >\n      <td>\n        <PersonalLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonalLink person={mother} />\n        )\n          : (\n            motherName || WITHOUT_RELATIVE\n          )}\n      </td>\n\n      <td>\n        {father ? (\n          <PersonalLink person={father} />\n        )\n          : (\n            fatherName || WITHOUT_RELATIVE\n          )}\n      </td>\n    </tr>\n  );\n};\n","export const NamesColumnsTable = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n","import { useParams } from 'react-router-dom';\nimport React from 'react';\nimport { Person } from '../types';\nimport { User } from './User';\nimport { NamesColumnsTable } from '../constants/NamesColumnsTable';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {NamesColumnsTable.map(name => (\n            <th\n              key={name}\n            >\n              {name}\n              <a href=\"#/people?sort=sex\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </a>\n            </th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          return (\n            <User\n              key={person.slug}\n              person={person}\n              selectedUser={slug}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person, Sex } from '../types';\n\nexport const findRelative = (gender: string, user: Person, users: Person[]) => {\n  const targetName = gender === Sex.Male ? user.fatherName : user.motherName;\n\n  return users.find(({ name }) => name === targetName);\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person, SearchParameters } from '../types';\nimport { getPeople } from '../api';\nimport { getPreparedPersons } from '../utils/getPreparedPersons';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isErrorToGetPeople, setIsErrorToGetPeople] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n\n  const sort = searchParams.get(SearchParameters.Sort) || '';\n  const order = searchParams.get(SearchParameters.Order) || '';\n\n  // eslint-disable-next-line no-console\n  console.log(sort, order);\n  const centuries = searchParams.getAll(SearchParameters.Centuries) || [];\n\n  const query = searchParams.get(SearchParameters.Query) || '';\n  const sex = searchParams.get(SearchParameters.Sex) || '';\n\n  const isNotPeopleOnServer\n    = !people.length\n    && !isLoading\n    && !isErrorToGetPeople;\n\n  const isErrorMessageVisible = isErrorToGetPeople && !isLoading;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((allPersons) => {\n        const PeopleWithRelatives = getPreparedPersons(allPersons);\n\n        setPeople(PeopleWithRelatives);\n      })\n      .catch(() => {\n        setIsErrorToGetPeople(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  function filterPeople(allPeople: Person[],\n    queryFilter: string,\n    filterBySex: string,\n    filterByCenturies: string[]) {\n    let copyAllPeople = [...allPeople];\n\n    if (queryFilter) {\n      copyAllPeople = copyAllPeople.filter(man => man.name.toLowerCase()\n        .includes(queryFilter.toLowerCase()));\n    }\n\n    if (filterBySex) {\n      copyAllPeople = copyAllPeople.filter(man => man.sex === filterBySex);\n    }\n\n    if (filterByCenturies.length) {\n      copyAllPeople = copyAllPeople.filter(person => {\n        const personCenturyBorn = Math.ceil(person.born / 100);\n\n        return filterByCenturies.includes(personCenturyBorn.toString());\n      });\n    }\n\n    return copyAllPeople;\n  }\n\n  const filteredPeople = filterPeople(people, query, sex, centuries);\n\n  // const navigate = useNavigate();\n\n  // function handleUserClick(slug: string) {\n  //   const newSearchParams = new URLSearchParams(searchParams);\n  //\n  //   newSearchParams.set('page', '2');\n  //   navigate(`/people/${slug}?${newSearchParams.toString()}`);\n  // }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!!people.length && (\n              <PeopleFilters />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n              {/* <Loader /> */}\n\n              {/* <p data-cy=\"peopleLoadingError\">Something went wrong</p> */}\n\n              {isErrorMessageVisible && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {isNotPeopleOnServer && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n              {!filteredPeople.length && !isLoading && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n\n              {!!filteredPeople.length && (\n                <PeopleTable\n                  people={filteredPeople}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person, Gender } from '../types';\nimport { findRelative } from './findRelative';\n\nexport const getPreparedPersons = (allPersons: Person[]) => {\n  return [...allPersons].map(onePerson => {\n    const mother = findRelative(Gender.FEMALE, onePerson, allPersons);\n    const father = findRelative(Gender.MALE, onePerson, allPersons);\n\n    return {\n      ...onePerson,\n      mother,\n      father,\n    };\n  });\n};\n","import {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route index element={<HomePage />} />\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}